{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/data-store.ts"],"sourcesContent":["// Shared data store for mock data with development persistence\nimport { Booking, User, Membership, Coach, League, GiftCard, DiscountCode } from \"./types\"\n\n// Global storage to persist across hot reloads in development\ndeclare global {\n  var __dataStore: DataStore | undefined\n}\n\n// In-memory data store (in a real app, this would be a database)\nexport class DataStore {\n  private bookings: Booking[] = []\n  private users: User[] = []\n  private memberships: Membership[] = []\n  private coaches: Coach[] = []\n  private leagues: League[] = []\n  private giftCards: GiftCard[] = []\n  private discountCodes: DiscountCode[] = []\n\n  constructor() {\n    // Initialize with some sample data only if empty\n    if (this.bookings.length === 0) {\n      this.initializeSampleData()\n    }\n  }\n\n  private initializeSampleData() {\n    // Sample admin user\n    this.users = [\n      {\n        id: \"admin_1\",\n        name: \"Admin User\",\n        email: \"admin@golfsim.com\",\n        phone: \"555-0100\",\n        password: \"admin123\",\n        isAdmin: true,\n        createdAt: new Date(\"2024-01-01\")\n      },\n      {\n        id: \"user_1\",\n        name: \"John Smith\",\n        email: \"john@example.com\",\n        phone: \"555-0101\",\n        membershipId: \"membership_1\",\n        createdAt: new Date(\"2024-01-15\")\n      },\n      {\n        id: \"user_2\",\n        name: \"Sarah Johnson\",\n        email: \"sarah@example.com\",\n        phone: \"555-0102\",\n        createdAt: new Date(\"2024-02-01\")\n      }\n    ]\n\n    // Sample memberships\n    this.memberships = [\n      {\n        id: \"membership_1\",\n        userId: \"user_1\",\n        status: \"active\",\n        freeHoursRemaining: 1.5,\n        billingDate: new Date(\"2024-02-15\"),\n        createdAt: new Date(\"2024-01-15\")\n      }\n    ]\n\n    // Sample bookings\n    this.bookings = [\n      {\n        id: \"booking_1\",\n        userId: \"user_1\",\n        date: new Date(\"2024-01-15\"),\n        startTime: \"14:00\",\n        endTime: \"16:00\",\n        duration: 2,\n        numberOfBays: 1,\n        numberOfPeople: 2,\n        bayNumbers: [1],\n        totalPrice: 100,\n        type: \"regular\",\n        status: \"confirmed\",\n        createdAt: new Date(\"2024-01-10\")\n      },\n      {\n        id: \"booking_2\",\n        guestName: \"Mike Wilson\",\n        guestEmail: \"mike@example.com\",\n        guestPhone: \"555-0103\",\n        date: new Date(\"2024-01-20\"),\n        startTime: \"10:00\",\n        endTime: \"11:30\",\n        duration: 1.5,\n        numberOfBays: 1,\n        numberOfPeople: 3,\n        bayNumbers: [2],\n        totalPrice: 75,\n        type: \"regular\",\n        status: \"completed\",\n        createdAt: new Date(\"2024-01-18\")\n      },\n      {\n        id: \"booking_3\",\n        userId: \"user_2\",\n        date: new Date(\"2024-02-05\"),\n        startTime: \"16:00\",\n        endTime: \"17:00\",\n        duration: 1,\n        numberOfBays: 1,\n        numberOfPeople: 1,\n        bayNumbers: [3],\n        totalPrice: 80,\n        type: \"lesson\",\n        status: \"confirmed\",\n        createdAt: new Date(\"2024-02-01\")\n      }\n    ]\n\n    // Sample coaches\n    this.coaches = [\n      {\n        id: \"coach_1\",\n        name: \"David Thompson\",\n        email: \"david@golfsim.com\",\n        phone: \"555-0200\",\n        availability: [\n          {\n            id: \"avail_1\",\n            coachId: \"coach_1\",\n            dayOfWeek: 1, // Monday\n            startTime: \"09:00\",\n            endTime: \"17:00\",\n            isAvailable: true\n          },\n          {\n            id: \"avail_2\",\n            coachId: \"coach_1\",\n            dayOfWeek: 2, // Tuesday\n            startTime: \"09:00\",\n            endTime: \"17:00\",\n            isAvailable: true\n          },\n          {\n            id: \"avail_3\",\n            coachId: \"coach_1\",\n            dayOfWeek: 3, // Wednesday\n            startTime: \"09:00\",\n            endTime: \"17:00\",\n            isAvailable: true\n          },\n          {\n            id: \"avail_4\",\n            coachId: \"coach_1\",\n            dayOfWeek: 4, // Thursday\n            startTime: \"09:00\",\n            endTime: \"17:00\",\n            isAvailable: true\n          },\n          {\n            id: \"avail_5\",\n            coachId: \"coach_1\",\n            dayOfWeek: 5, // Friday\n            startTime: \"09:00\",\n            endTime: \"17:00\",\n            isAvailable: true\n          }\n        ],\n        createdAt: new Date(\"2024-01-01\")\n      },\n      {\n        id: \"coach_2\",\n        name: \"Lisa Rodriguez\",\n        email: \"lisa@golfsim.com\",\n        phone: \"555-0201\",\n        availability: [\n          {\n            id: \"avail_6\",\n            coachId: \"coach_2\",\n            dayOfWeek: 6, // Saturday\n            startTime: \"08:00\",\n            endTime: \"16:00\",\n            isAvailable: true\n          },\n          {\n            id: \"avail_7\",\n            coachId: \"coach_2\",\n            dayOfWeek: 0, // Sunday\n            startTime: \"08:00\",\n            endTime: \"16:00\",\n            isAvailable: true\n          }\n        ],\n        createdAt: new Date(\"2024-01-01\")\n      }\n    ]\n\n    // Sample leagues\n    this.leagues = [\n      {\n        id: \"league_1\",\n        name: \"Winter Championship League\",\n        description: \"Competitive 4-man scramble league running through winter months\",\n        format: \"4-man\",\n        matchType: \"lowest-score\",\n        pricePerPerson: 25,\n        maxTeams: 16,\n        bayAllocation: [1, 2, 3, 4],\n        startDate: new Date(\"2024-01-08\"),\n        endDate: new Date(\"2024-03-25\"),\n        dayOfWeek: 1, // Monday\n        startTime: \"18:00\",\n        numberOfWeeks: 12,\n        status: \"in-progress\",\n        createdAt: new Date(\"2023-12-15\")\n      },\n      {\n        id: \"league_2\",\n        name: \"Spring Singles League\",\n        description: \"Individual competition for spring season\",\n        format: \"single\",\n        matchType: \"match-play\",\n        pricePerPerson: 35,\n        maxTeams: 24,\n        bayAllocation: [1, 2, 3, 4, 5, 6],\n        startDate: new Date(\"2024-04-01\"),\n        endDate: new Date(\"2024-06-17\"),\n        dayOfWeek: 3, // Wednesday\n        startTime: \"19:00\",\n        numberOfWeeks: 12,\n        status: \"open\",\n        createdAt: new Date(\"2024-02-01\")\n      }\n    ]\n\n    // Sample discount codes\n    this.discountCodes = [\n      {\n        id: \"discount_1\",\n        code: \"WELCOME20\",\n        description: \"20% off first booking for new customers\",\n        type: \"percentage\",\n        value: 20,\n        maxUses: 100,\n        currentUses: 15,\n        validFrom: new Date(\"2024-01-01\"),\n        validUntil: new Date(\"2024-12-31\"),\n        status: \"active\",\n        createdAt: new Date(\"2024-01-01\")\n      },\n      {\n        id: \"discount_2\",\n        code: \"MEMBER10\",\n        description: \"$10 off for members\",\n        type: \"dollar\",\n        value: 10,\n        maxUses: 500,\n        currentUses: 45,\n        validFrom: new Date(\"2024-01-01\"),\n        validUntil: new Date(\"2024-06-30\"),\n        status: \"active\",\n        createdAt: new Date(\"2024-01-01\")\n      },\n      {\n        id: \"discount_3\",\n        code: \"EXPIRED50\",\n        description: \"50% off - expired promotion\",\n        type: \"percentage\",\n        value: 50,\n        maxUses: 50,\n        currentUses: 50,\n        validFrom: new Date(\"2023-12-01\"),\n        validUntil: new Date(\"2023-12-31\"),\n        status: \"inactive\",\n        createdAt: new Date(\"2023-11-15\")\n      }\n    ]\n\n    // Sample gift cards\n    this.giftCards = [\n      {\n        id: \"gift_1\",\n        code: \"GC-2024-001\",\n        amount: 100,\n        remainingBalance: 100,\n        purchaserName: \"Jennifer Davis\",\n        purchaserEmail: \"jennifer@example.com\",\n        recipientName: \"Tom Davis\",\n        recipientEmail: \"tom@example.com\",\n        status: \"active\",\n        createdAt: new Date(\"2024-01-10\")\n      },\n      {\n        id: \"gift_2\",\n        code: \"GC-2024-002\",\n        amount: 200,\n        remainingBalance: 75,\n        purchaserName: \"Corporate Client\",\n        purchaserEmail: \"hr@company.com\",\n        status: \"active\",\n        createdAt: new Date(\"2024-01-20\"),\n        redeemedAt: new Date(\"2024-01-25\")\n      },\n      {\n        id: \"gift_3\",\n        code: \"GC-2024-003\",\n        amount: 50,\n        remainingBalance: 0,\n        purchaserName: \"Mary Johnson\",\n        purchaserEmail: \"mary@example.com\",\n        recipientName: \"Bob Johnson\",\n        recipientEmail: \"bob@example.com\",\n        status: \"redeemed\",\n        createdAt: new Date(\"2024-02-01\"),\n        redeemedAt: new Date(\"2024-02-05\")\n      }\n    ]\n  }\n\n  public static getInstance(): DataStore {\n    if (typeof globalThis !== 'undefined') {\n      if (!globalThis.__dataStore) {\n        globalThis.__dataStore = new DataStore()\n      }\n      return globalThis.__dataStore\n    }\n    return new DataStore()\n  }\n\n  // Booking methods\n  public addBooking(booking: Booking): void {\n    this.bookings.push(booking)\n    console.log(`Booking added: ${booking.id}. Total bookings: ${this.bookings.length}`)\n  }\n\n  public getBooking(id: string): Booking | undefined {\n    return this.bookings.find(b => b.id === id)\n  }\n\n  public getAllBookings(): Booking[] {\n    return [...this.bookings]\n  }\n\n  public updateBooking(id: string, updates: Partial<Booking>): boolean {\n    const index = this.bookings.findIndex(b => b.id === id)\n    if (index !== -1) {\n      this.bookings[index] = { ...this.bookings[index], ...updates }\n      return true\n    }\n    return false\n  }\n\n  public deleteBooking(id: string): boolean {\n    const index = this.bookings.findIndex(b => b.id === id)\n    if (index !== -1) {\n      this.bookings.splice(index, 1)\n      return true\n    }\n    return false\n  }\n\n  // User methods\n  public addUser(user: User): void {\n    this.users.push(user)\n  }\n\n  public getUser(id: string): User | undefined {\n    return this.users.find(u => u.id === id)\n  }\n\n  public getUserByEmail(email: string): User | undefined {\n    return this.users.find(u => u.email === email)\n  }\n\n  public getAllUsers(): User[] {\n    return [...this.users]\n  }\n\n  // Membership methods\n  public addMembership(membership: Membership): void {\n    this.memberships.push(membership)\n  }\n\n  public getMembership(userId: string): Membership | undefined {\n    return this.memberships.find(m => m.userId === userId)\n  }\n\n  // Coach methods\n  public addCoach(coach: Coach): void {\n    this.coaches.push(coach)\n  }\n\n  public getCoach(id: string): Coach | undefined {\n    return this.coaches.find(c => c.id === id)\n  }\n\n  public getAllCoaches(): Coach[] {\n    return [...this.coaches]\n  }\n\n  // League methods\n  public addLeague(league: League): void {\n    this.leagues.push(league)\n  }\n\n  public getLeague(id: string): League | undefined {\n    return this.leagues.find(l => l.id === id)\n  }\n\n  public getAllLeagues(): League[] {\n    return [...this.leagues]\n  }\n\n  // Gift card methods\n  public addGiftCard(giftCard: GiftCard): void {\n    this.giftCards.push(giftCard)\n  }\n\n  public getGiftCard(code: string): GiftCard | undefined {\n    return this.giftCards.find(gc => gc.code === code)\n  }\n\n  public getAllGiftCards(): GiftCard[] {\n    return [...this.giftCards]\n  }\n\n  // Discount code methods\n  public addDiscountCode(discountCode: DiscountCode): void {\n    this.discountCodes.push(discountCode)\n  }\n\n  public getDiscountCode(code: string): DiscountCode | undefined {\n    return this.discountCodes.find(dc => dc.code === code)\n  }\n\n  public getAllDiscountCodes(): DiscountCode[] {\n    return [...this.discountCodes]\n  }\n}\n\n// Export singleton instance\nexport const dataStore = DataStore.getInstance()\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/admin/coaches/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { dataStore } from \"@/lib/data-store\"\nimport { Coach, CoachAvailability } from \"@/lib/types\"\n\nexport default function AdminCoaches() {\n  const [coaches, setCoaches] = useState<Coach[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    try {\n      const allCoaches = dataStore.getAllCoaches()\n      setCoaches(allCoaches)\n    } catch (err) {\n      setError(\"Failed to load coaches\")\n      console.error(\"Coaches error:\", err)\n    } finally {\n      setLoading(false)\n    }\n  }, [])\n\n  const formatDate = (date: Date) => {\n    return new Date(date).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    })\n  }\n\n  const getDayName = (dayOfWeek: number) => {\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n    return days[dayOfWeek] || 'Unknown'\n  }\n\n  const formatTime = (time: string) => {\n    const [hours, minutes] = time.split(':')\n    const hour = parseInt(hours)\n    const ampm = hour >= 12 ? 'PM' : 'AM'\n    const displayHour = hour % 12 || 12\n    return `${displayHour}:${minutes} ${ampm}`\n  }\n\n  const getAvailabilitySchedule = (availability: CoachAvailability[]) => {\n    const availableDays = availability\n      .filter(a => a.isAvailable)\n      .sort((a, b) => a.dayOfWeek - b.dayOfWeek)\n    \n    if (availableDays.length === 0) {\n      return \"No availability set\"\n    }\n\n    return availableDays.map(day => \n      `${getDayName(day.dayOfWeek)}: ${formatTime(day.startTime)} - ${formatTime(day.endTime)}`\n    ).join(', ')\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900\"></div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n        <p className=\"text-red-800\">{error}</p>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">Coach Management</h1>\n        <p className=\"text-gray-600 mt-2\">Manage golf instructors and their schedules</p>\n      </div>\n\n      {/* Add Coach Button */}\n      <div className=\"mb-6\">\n        <button className=\"bg-gray-900 text-white px-4 py-2 rounded-md hover:bg-gray-800 transition-colors\">\n          Add New Coach\n        </button>\n      </div>\n\n      {/* Coaches List */}\n      {coaches.length === 0 ? (\n        <div className=\"bg-white rounded-lg shadow p-8 text-center\">\n          <p className=\"text-gray-500\">No coaches found. Add your first coach to get started.</p>\n        </div>\n      ) : (\n        <div className=\"space-y-6\">\n          {coaches.map((coach) => (\n            <div key={coach.id} className=\"bg-white rounded-lg shadow p-6\">\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex items-start space-x-4\">\n                  {/* Coach Avatar Placeholder */}\n                  <div className=\"w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center\">\n                    <span className=\"text-xl font-semibold text-gray-600\">\n                      {coach.name.split(' ').map(n => n[0]).join('').toUpperCase()}\n                    </span>\n                  </div>\n                  \n                  <div className=\"flex-1\">\n                    <h3 className=\"text-xl font-semibold text-gray-900\">{coach.name}</h3>\n                    <div className=\"mt-2 space-y-1\">\n                      <p className=\"text-sm text-gray-600\">\n                        <span className=\"font-medium\">Email:</span> {coach.email}\n                      </p>\n                      <p className=\"text-sm text-gray-600\">\n                        <span className=\"font-medium\">Phone:</span> {coach.phone}\n                      </p>\n                      <p className=\"text-sm text-gray-600\">\n                        <span className=\"font-medium\">Joined:</span> {formatDate(coach.createdAt)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"flex space-x-2\">\n                  <button className=\"text-sm text-gray-600 hover:text-gray-900 transition-colors\">\n                    Edit\n                  </button>\n                  <button className=\"text-sm text-gray-600 hover:text-gray-900 transition-colors\">\n                    Schedule\n                  </button>\n                  <button className=\"text-sm text-red-600 hover:text-red-900 transition-colors\">\n                    Remove\n                  </button>\n                </div>\n              </div>\n\n              {/* Availability Schedule */}\n              <div className=\"mt-6 pt-6 border-t border-gray-200\">\n                <h4 className=\"text-sm font-medium text-gray-900 mb-3\">Weekly Availability</h4>\n                \n                {coach.availability.length === 0 ? (\n                  <p className=\"text-sm text-gray-500\">No availability schedule set</p>\n                ) : (\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    {coach.availability\n                      .sort((a, b) => a.dayOfWeek - b.dayOfWeek)\n                      .map((availability) => (\n                        <div\n                          key={availability.id}\n                          className={`p-3 rounded-md border ${\n                            availability.isAvailable\n                              ? 'bg-green-50 border-green-200'\n                              : 'bg-gray-50 border-gray-200'\n                          }`}\n                        >\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm font-medium text-gray-900\">\n                              {getDayName(availability.dayOfWeek)}\n                            </span>\n                            <span className={`text-xs px-2 py-1 rounded-full ${\n                              availability.isAvailable\n                                ? 'bg-green-100 text-green-800'\n                                : 'bg-gray-100 text-gray-800'\n                            }`}>\n                              {availability.isAvailable ? 'Available' : 'Unavailable'}\n                            </span>\n                          </div>\n                          {availability.isAvailable && (\n                            <p className=\"text-sm text-gray-600 mt-1\">\n                              {formatTime(availability.startTime)} - {formatTime(availability.endTime)}\n                            </p>\n                          )}\n                        </div>\n                      ))}\n                  </div>\n                )}\n              </div>\n\n              {/* Quick Stats */}\n              <div className=\"mt-6 pt-6 border-t border-gray-200\">\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div className=\"text-center\">\n                    <p className=\"text-2xl font-bold text-gray-900\">\n                      {coach.availability.filter(a => a.isAvailable).length}\n                    </p>\n                    <p className=\"text-sm text-gray-600\">Available Days</p>\n                  </div>\n                  <div className=\"text-center\">\n                    <p className=\"text-2xl font-bold text-gray-900\">0</p>\n                    <p className=\"text-sm text-gray-600\">Lessons This Week</p>\n                  </div>\n                  <div className=\"text-center\">\n                    <p className=\"text-2xl font-bold text-gray-900\">$0</p>\n                    <p className=\"text-sm text-gray-600\">Revenue This Month</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Summary Stats */}\n      <div className=\"mt-8 grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <h3 className=\"text-sm font-medium text-gray-500\">Total Coaches</h3>\n          <p className=\"text-2xl font-bold text-gray-900\">{coaches.length}</p>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <h3 className=\"text-sm font-medium text-gray-500\">Active Coaches</h3>\n          <p className=\"text-2xl font-bold text-green-600\">\n            {coaches.filter(c => c.availability.some(a => a.isAvailable)).length}\n          </p>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <h3 className=\"text-sm font-medium text-gray-500\">Total Availability Hours</h3>\n          <p className=\"text-2xl font-bold text-blue-600\">\n            {coaches.reduce((total, coach) => {\n              return total + coach.availability.filter(a => a.isAvailable).reduce((dayTotal, availability) => {\n                const start = new Date(`2000-01-01 ${availability.startTime}`)\n                const end = new Date(`2000-01-01 ${availability.endTime}`)\n                const hours = (end.getTime() - start.getTime()) / (1000 * 60 * 60)\n                return dayTotal + hours\n              }, 0)\n            }, 0)}h\n          </p>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <h3 className=\"text-sm font-medium text-gray-500\">Avg Hours per Coach</h3>\n          <p className=\"text-2xl font-bold text-gray-900\">\n            {coaches.length > 0 ? Math.round(\n              coaches.reduce((total, coach) => {\n                return total + coach.availability.filter(a => a.isAvailable).reduce((dayTotal, availability) => {\n                  const start = new Date(`2000-01-01 ${availability.startTime}`)\n                  const end = new Date(`2000-01-01 ${availability.endTime}`)\n                  const hours = (end.getTime() - start.getTime()) / (1000 * 60 * 60)\n                  return dayTotal + hours\n                }, 0)\n              }, 0) / coaches.length\n            ) : 0}h\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}